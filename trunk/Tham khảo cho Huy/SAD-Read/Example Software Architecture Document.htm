<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0106)http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm -->
<HTML><HEAD><TITLE>Example: Software Architecture Document</TITLE>
<META content="text/html; charset=iso-8859-1" http-equiv=Content-Type>
<META name=GENERATOR content="MSHTML 8.00.7600.16385">
<META name=ProgId content=FrontPage.Editor.Document><LINK rel=stylesheet 
type=text/css 
href="Example%20Software%20Architecture%20Document_files/project.css">
<META name="Microsoft Border" content=b></HEAD>
<BODY><!--msnavigation-->
<TABLE border=0 cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR><!--msnavigation-->
    <TD vAlign=top>
      <P align=left><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/pt_sad.htm"><FONT 
      size=4>Related information</FONT></A></P><B><FONT size=5 face=Arial>
      <P align=right><A name=top></A>Course Registration System</P></FONT>
      <P align=right><FONT size=5 face=Arial>Software Architecture 
      Document<BR></FONT><FONT size=4 face=Arial>Version 1.0</FONT></P><FONT 
      size=5 face=Arial>
      <P align=center>Revision History</P></FONT></B>
      <TABLE border=1 cellSpacing=1 cellPadding=7 width="90%">
        <TBODY>
        <TR>
          <TD vAlign=top width="20%"><FONT size=2><B>
            <P align=center>Date</B></FONT></P></TD>
          <TD vAlign=top width="10%"><FONT size=2><B>
            <P align=center>Version</B></FONT></P></TD>
          <TD vAlign=top width="55%"><FONT size=2><B>
            <P align=center>Description</B></FONT></P></TD>
          <TD vAlign=top width="15%"><FONT size=2><B>
            <P align=center>Author</B></FONT></P></TD></TR>
        <TR>
          <TD vAlign=top width="20%"><FONT size=2>21/March/1999</FONT></TD>
          <TD vAlign=top width="10%"><FONT size=2>1.0</FONT></TD>
          <TD vAlign=top width="55%"><FONT size=2>Software Architecture 
            Document generated using Rational SoDA template and Rational Rose 
            model.</FONT></TD>
          <TD vAlign=top width="15%"><FONT size=2>S. Johnson</FONT></TD></TR>
        <TR>
          <TD vAlign=top width="20%"><PRE> </PRE></TD>
          <TD vAlign=top width="10%"><PRE> </PRE></TD>
          <TD vAlign=top width="55%"><PRE> </PRE></TD>
          <TD vAlign=top width="15%"><PRE> </PRE></TD></TR>
        <TR>
          <TD vAlign=top width="20%"><PRE> </PRE></TD>
          <TD vAlign=top width="10%"><PRE> </PRE></TD>
          <TD vAlign=top width="55%"><PRE> </PRE></TD>
          <TD vAlign=top width="15%"><PRE> </PRE></TD></TR>
        <TR>
          <TD vAlign=top width="20%"><PRE> </PRE></TD>
          <TD vAlign=top width="10%"><PRE> </PRE></TD>
          <TD vAlign=top width="55%"><PRE> </PRE></TD>
          <TD vAlign=top width="15%"><PRE> </PRE></TD></TR></TBODY></TABLE>
      <P>&nbsp;</P><FONT size=5 face=Arial><B>
      <P align=center>&nbsp;</P>
      <P align=center><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#top" 
      name=Toc>Table of Contents<IMG border=0 
      src="Example%20Software%20Architecture%20Document_files/top.gif" width=26 
      height=20></A></P></B></FONT>
      <BLOCKQUOTE>
        <P align=left><FONT size=3><A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#introduction">1. 
        &nbsp; Introduction<BR></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Purpose">1.1 
        Purpose</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Scope">1.2 
        Scope</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Definitions, Acronyms and Abbreviations">1.3 
        Definitions, Acronyms and 
        Abbreviations</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#References">1.4 
        References</A></FONT></P><FONT size=3><A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Architectural Representation">2. 
        &nbsp; Architectural Representation</A></FONT> 
        <P><FONT size=3><A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Architectural Goals and Constraints">3. 
        &nbsp; Architectural Goals and Constraints</A></FONT> 
        <P><FONT size=3><A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Use-Case View">4. 
        &nbsp; Use-Case View<BR></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Architecturally-Significant Use Cases">4.1 
        Architecturally-Significant Use Cases</A></FONT> 
        <P><FONT size=3><A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Logical View">5. 
        &nbsp; Logical View<BR></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Architecture Overview – Package and Subsystem Layering">5.1 
        Architecture Overview – Package and Subsystem Layering</A></FONT> 
        <P><FONT size=3><A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Process View">6. 
        &nbsp; Process View<BR></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Processes">6.1 
        Processes</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Process to Design Elements">6.2 
        Process to Design 
        Elements</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Process Model to Design Model Dependencies">6.3 
        Process Model to Design Model 
        Dependencies</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Processes to the Implementation">6.4 
        Processes to the Implementation</A></FONT> 
        <P><FONT size=3><A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Deployment View">7. 
        &nbsp; Deployment View<BR></A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#External Desktop PC">7.1 
        External Desktop PC</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Desktop PC">7.2 
        Desktop PC</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Registration Server">7.3 
        Registration Server</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Course Catalog">7.4 
        Course Catalog</A>&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        <A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Billing System">7.5 
        Billing System&nbsp;</A></FONT> 
        <P><FONT size=3><A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Size and Performance">8. 
        &nbsp; Size and Performance</A></FONT> 
        <P><FONT size=3><A 
        href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Quality">9. 
        &nbsp; Quality</A></FONT> </P></BLOCKQUOTE><B><FONT size=5 face=Arial>
      <P align=center>Software Architecture Document</P></FONT><FONT 
      face=Arial>1.&nbsp; <A name=Introduction>Introduction</A> <A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT> </B><FONT size=2>
      <H4>1.1 <A name=Purpose>Purpose</A> <B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT> </B></H4></FONT>
      <OL><FONT size=2>
        <P>This document provides a comprehensive architectural overview of the 
        system, using a number of different architectural views to depict 
        different aspects of the system. It is intended to capture and convey 
        the significant architectural decisions which have been made on the 
        system.</P></FONT></OL><FONT size=2>
      <H4>1.2 <A name=Scope>Scope</A> <B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT> </B></H4></FONT>
      <OL><FONT size=2>
        <P>This Software Architecture Document provides an architectural 
        overview of the C-Registration System. The C-Registration System is 
        being developed by Wylie College to support online course 
        registration.</P>
        <P>This Document has been generated directly from the C-Registration 
        Analysis &amp; Design Model implemented in Rose. The majority of the 
        sections have been extracted from the Rose Model using SoDA and the 
        Software Architecture Document template.</P></FONT></OL><FONT size=2>
      <H4>1.3 <A name="Definitions, Acronyms and Abbreviations">Definitions, 
      Acronyms and Abbreviations</A> <B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT> </B></H4></FONT>
      <OL><FONT size=2>
        <P>See the Glossary [4].</P></FONT></OL><FONT size=2>
      <H4>1.4 <A name=References>References</A> <B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT> </B></H4></FONT>
      <OL><FONT size=2>
        <BLOCKQUOTE>
          <P>Applicable references are:</P></BLOCKQUOTE>
        <OL>
          <OL>
            <LI>Course Billing Interface Specification, WC93332, 1985, Wylie 
            College Press. 
            <LI>Course Catalog Database Specification, WC93422, 1985, Wylie 
            College Press. 
            <LI>Vision Document of the C-Registration System, WyIT387, V1.0, 
            1998, Wylie College IT. 
            <LI>Glossary for the C-Registration System, WyIT406, V2.0, 1999, 
            Wylie College IT. 
            <LI>Use Case Spec - Close Registration, WyIT403, V2.0, 1999, Wylie 
            College IT. 
            <LI>Use Case Spec – Login, WyIT401, V2.0, 1999, Wylie College IT. 
            <LI>Use Case Spec - Maintain Professor Info, WyIT407, Version 2.0, 
            1999, Wylie College IT. 
            <LI>Use Case Spec - Register for Courses, WyIT402, Version 2.0, 
            1999, Wylie College IT. 
            <LI>Use Case Spec - Select Courses to Teach, WyIT405, Version 2.0, 
            1999, Wylie College IT. 
            <LI>Use Case Spec - Maintain Student Info, WyIT408, Version 2.0, 
            1999, Wylie College IT. 
            <LI>Use Case Spec - Submit Grades, WyIT409, Version 2.0, 1999, Wylie 
            College IT. 
            <LI>Use Case Spec - View Report Card, WyIT410, Version 2.0, 1999, 
            Wylie College IT. 
            <LI>Software Development Plan for the C-Registration System, 
            WyIT418, V1.0, 1999, Wylie College IT. 
            <LI>E1 Iteration Plan, WyIT420, V1.0, 1999, Wylie College IT. 
            <LI>Supplementary Specification, WyIT400, V1.0, 1999, Wylie College, 
            IT. 
            <P> </P></LI></OL></OL></FONT></OL><FONT face=Arial><B>2.&nbsp; <A 
      name="Architectural Representation">Architectural Representation</A> 
      </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <OL><FONT size=2>
        <P>This document presents the architecture as a series of views; use 
        case view, logical view, process view and deployment view. There is no 
        separate implementation view described in this document. These are views 
        on an underlying Unified Modeling Language (UML) model developed using 
        Rational Rose. </P></FONT></OL><FONT face=Arial><B>3.&nbsp; <A 
      name="Architectural Goals and Constraints">Architectural Goals and 
      Constraints</A> </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <BLOCKQUOTE><FONT size=2>
        <P>There are some key requirements and system constraints that have a 
        significant bearing on the architecture. They are:</P></FONT></BLOCKQUOTE>
      <OL>
        <OL><FONT size=2>
          <LI>The existing legacy Course Catalog System at Wylie College must be 
          accessed to retrieve all course information for the current semester. 
          The C-Registration System must support the data formats and DBMS of 
          the legacy Course Catalog System [2]. 
          <LI>The existing legacy Billing System at Wylie College must be 
          interfaced with to support billing of students. This interface is 
          defined in the Course Billing Interface Specification [1]. 
          <LI>All student, professor, and Registrar functionality must be 
          available from both local campus PCs and remote PCs with internet dial 
          up connections. 
          <LI>The C-Registration System must ensure complete protection of data 
          from unauthorized access. All remote accesses are subject to user 
          identification and password control. 
          <LI>The C-Registration System will be implemented as a client-server 
          system. The client portion resides on PCs and the server portion must 
          operate on the Wylie College UNIX Server. [3] 
          <LI>All performance and loading requirements, as stipulated in the 
          Vision Document [3] and the Supplementary Specification [15], must be 
          taken into consideration as the architecture is being 
          developed.</FONT> </LI></OL>
        <P> </P></OL><FONT face=Arial><B>4.&nbsp; <A name="Use-Case View">Use-Case 
      View</A> </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <BLOCKQUOTE><FONT size=2>
        <P>A description of the use-case view of the software architecture. The 
        Use Case View is important input to the selection of the set of 
        scenarios and/or use cases that are the focus of an iteration. It 
        describes the set of scenarios and/or use cases that represent some 
        significant, central functionality. It also describes the set of 
        scenarios and/or use cases that have a substantial architectural 
        coverage (that exercise many architectural elements) or that stress or 
        illustrate a specific, delicate point of the architecture.</P>
        <P>The C-Registration use cases are:</P>
        <P>- Login</P>
        <P>- Register for Courses</P>
        <P>- Maintain Student Information</P>
        <P>- Maintain Professor Information</P>
        <P>- Select Courses to Teach</P>
        <P>- Submit Grades</P>
        <P>- View Report Card</P>
        <P>- Close Registration.</P>
        <P>These use cases are initiated by the student, professor, or the 
        registrar actors. In addition, interaction with external actors; Course 
        Catalog and Billing System occur.</FONT> </P></BLOCKQUOTE><FONT size=2 
      face=Arial><B>4.1&nbsp; <A 
      name="Architecturally-Significant Use Cases">Architecturally-Significant 
      Use Cases</A> </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <P><IMG border=0 
      src="Example%20Software%20Architecture%20Document_files/sadoc_3.gif" 
      width=744 height=702></P>
      <OL>
        <OL><FONT size=2>
          <P align=center>Diagram Name: Architecturally Significant 
          Use-Cases</P></FONT>
          <P> </P></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>4.1.1 Close Registration 
      </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>Brief Description:This use case allows a Registrar to close the 
            registration process. Course offerings that do not have enough 
            students are cancelled. Course offerings must have a minimum of 
            three students in them. The billing system is notified for each 
            student in each course offering that is not cancelled, so the 
            student can be billed for the course offering. The main actor of 
            this use case is the Registrar. The Billing System is an actor 
            involved within this use case.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>4.1.2 Login </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>Brief Description:This use case describes how a user logs into 
            the Course Registration System. The actors starting this use case 
            are Student, Professor, and Registrar.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>4.1.3 Maintain Professor Information 
        </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>Brief Description:This use case allows the registrar to maintain 
            professor information in the registration system. This includes 
            adding, modifying, and deleting professors from the system. The 
            actor of this use case is the Registrar.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>4.1.4 Select Courses to Teach 
      </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>Brief Description:This use case allows a professor to select the 
            course offerings (date- and time- specific courses will be given) 
            from the course catalog for the courses that he/she is eligible for 
            and wishes to teach in the upcoming semester. The actor starting 
            this use case is the Professor. The Course Catalog System is an 
            actor within the use case.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>4.1.5 Register for Courses 
      </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>Brief Description:This use case allows a student to register for 
            courses in the current semester. The student can also modify or 
            delete course selections if changes are made within the add/drop 
            period at the beginning of the semester. The Billing System is 
            notified of all registration updates. The Course Catalog provides a 
            list of all the course offerings for the current semester. The main 
            actor of this use case is the student. The Course Catalog System is 
            an actor within the use case.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>4.1.6 View Report Card 
      </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>Brief Description:This use case allows a student to view his/her 
            report card for the previously completed semester. The student is 
            the actor of this use case.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>4.1.7 Submit Grades 
      </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>Brief Description:This use case allows a professor to submit 
            student grades for one or more classes completed in the previous 
            semester. The actor in this use case is the 
        Professor.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>4.1.8 Maintain Student Information 
        </FONT></BLOCKQUOTE></I>
      <OL><FONT size=2>
        <BLOCKQUOTE>
          <P>Brief Description:This use case allows the registrar to maintain 
          student information in the registration system. This includes adding, 
          modifying, and deleting students from the system. The actor for this 
          use case is the Registrar.</P></BLOCKQUOTE></FONT></OL><FONT 
      face=Arial><B>5.&nbsp; <A name="Logical View">Logical View</A> 
      </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <OL><FONT size=2>
        <P>A description of the logical view of the architecture. Describes the 
        most important classes, their organization in service packages and 
        subsystems, and the organization of these subsystems into layers. Also 
        describes the most important use-case realizations, for example, the 
        dynamic aspects of the architecture. Class diagrams may be included to 
        illustrate the relationships between architecturally significant 
        classes, subsystems, packages and layers.</P>
        <P>The logical view of the course registration system is comprised of 
        the 3 main packages: User Interface, Business Services, and Business 
        Objects.</P>
        <P>The User Interface Package contains classes for each of the forms 
        that the actors use to communicate with the System. Boundary classes 
        exist to support login, maintaining of schedules, maintaining of 
        professor info, selecting courses, submitting grades, maintaining 
        student info, closing registration, and viewing report cards.</P>
        <P>The Business Services Package contains control classes for 
        interfacing with the billing system, controlling student registration, 
        and managing the student evaluation.</P>
        <P>The Business Objects Package includes entity classes for the 
        university artifacts (i.e. course offering, schedule) and boundary 
        classes for the interface with the Course Catalog System.</P></FONT>
        <P> </P></OL><FONT size=2 face=Arial><B>5.1&nbsp; <A 
      name="Architecture Overview – Package and Subsystem Layering">Architecture 
      Overview – Package and Subsystem Layering</A> </B></FONT><B><FONT 
      face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B><FONT size=2> 
      <P><IMG border=0 
      src="Example%20Software%20Architecture%20Document_files/sadoc_4.gif" 
      width=532 height=482></P></FONT>
      <OL>
        <OL>
          <P> </P></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>5.1.1 Application 
      </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>layer</P>
            <P>This application layer has all the boundary classes that 
            represent the application screens that the user sees. This layer 
            depends upon the Process Objects layer; that straddles the 
            separation of the client from mid-tier.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>5.1.2 Business Services 
      </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>layer</P>
            <P>The Business Services process layer has all the controller 
            classes that represent the use case managers that drive the 
            application behavior. This layer represents the client-to-mid-tier 
            border. The Business Services layer depends upon the Process Objects 
            layer; that straddles the separation of the client from 
            mid-tier.</P></FONT></OL></OL></OL>
      <OL>
        <OL>
          <OL></OL></OL></OL><I>
      <BLOCKQUOTE>
        <P><FONT size=2 face=Arial>5.1.3 Middleware</FONT></P></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>layer</P>
            <P>The Middleware layer supports access to Relational DBMS and 
            OODBMS.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE>
        <P><FONT size=2 face=Arial>5.1.4 Base Reuse</FONT></P></BLOCKQUOTE></I>
      <OL><I><FONT size=2 face=Arial></FONT></I><FONT size=2>
        <BLOCKQUOTE>
          <P>The Base Reuse package includes classes to support list functions 
          and patterns.</P>
          <P>&nbsp;</P></BLOCKQUOTE></FONT></OL><FONT face=Arial><B>6.&nbsp; <A 
      name="Process View">Process View</A> </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <OL><FONT size=2>
        <P>A description of the process view of the architecture. Describes the 
        tasks (processes and threads) involved in the system's execution, their 
        interactions and configurations. Also describes the allocation of 
        objects and classes to tasks.</P>
        <P>The Process Model illustrates the course registration classes 
        organized as executable processes. Processes exist to support student 
        registration, professor functions, registration closing, and access to 
        the external Billing System and Course Catalog System.</FONT> 
      </P></OL><FONT size=2 face=Arial><B>6.1 <A name=Processes>Processes</A> 
      </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B><FONT size=2> 
      <P><IMG border=0 
      src="Example%20Software%20Architecture%20Document_files/sadoc_1.gif" 
      width=681 height=592></P>
      <P>&nbsp;</P></FONT>
      <OL>
        <OL><FONT size=2>
          <P align=center>Diagram Name: Processes</P></FONT></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.1.1 <A 
        name=_Toc447085913>CourseCatalogSystemAccess</A> </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>This process manages access to the legacy Course Catalog System. 
            It can be shared by multiple users registering for courses. This 
            allows for a cache of recently retrieved courses and offerings to 
            improve performance.</P>
            <P>The separate threads within the CourseCatalog process, 
            CourseCache and OfferingCache are used to asynchronously retrieve 
            items from the legacy system.</P>
            <P>Analysis Mechanisms:</P>
            <P>- Legacy Interface</P>
            <P>Requirements Traceability:</P>
            <P>- Design Constraints: The system shall integrate with existing 
            legacy system (course catalog database).</P>
            <P>&nbsp;</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.1.2 <A 
        name=_Toc447085914>CourseCatalog</A> </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>The unabbridged catalog of all courses and course offerings 
            offered by the university including those from previous 
            semesters.</P>
            <P>This class acts as an adapter (see the Gamma pattern). It works 
            to makes sure the CourseCatalogSystem can be accessed through the 
            ICourseCatalog interface to the subsystem.</P>
            <P>&nbsp;</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.1.3 <A 
        name=_Toc447085915>CourseRegistrationProcess</A> </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>There is one instance of this process for each student that is 
            currently registering for courses.</P>
            <P>&nbsp;</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.1.4 <A 
        name=_Toc447085916>RegistrationController</A> </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>This supports the use case allowing a student to register for 
            courses in the current semester. The student can also modify or 
            delete course selections if changes are made within the add/drop 
            period at the beginning of the semester.</P>
            <P>Analysis Mechanisms:</P>
            <P>- Distribution</P>
            <P>&nbsp;</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.1.5 <A 
        name=_Toc447085917>StudentApplication</A> </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>Manages the student functionality, including user interface 
            processing and coordination with the business processes.</P>
            <P>There is one instance of this process for each student that is 
            currently registering for courses.</P>
            <P>&nbsp;</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.1.6 <A 
        name=_Toc447085918>MainStudentForm</A> </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>Controls the interface of the Student application. Controls the 
            family of forms that the Student uses.</P>
            <P>&nbsp;</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.1.7 <A 
        name=_Toc447085919>BillingSystemAccess</A> </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>This process communicates with the external Billing&nbsp; System 
            to initiate student billing.</P>
            <P>&nbsp;</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.1.8 <A 
        name=_Toc447085920>CloseRegistrationProcess</A> </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>The Close Registration process is initiated at the end of the 
            registration time period. This process communicates with the process 
            controlling access to the Billing&nbsp; System.</P>
            <P>&nbsp;</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.1.9 <A 
        name=_Toc447085921>BillingSystem</A> </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>The Billing System supports the submitting of student bills for 
            the courses registered for by the student for the current 
            semester.</P>
            <P>Analysis Mechanisms:</P>
            <P>- Legacy Interface</P>
            <P>&nbsp;</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.1.10 <A 
        name=_Toc447085922>CloseRegistrationController</A> 
</FONT></BLOCKQUOTE></I>
      <OL>
        <OL><FONT size=2>
          <P>The Close Registration Controller controls access to the 
          Billing&nbsp; System.</P>
          <P>Analysis Mechanisms:</P>
          <P>- Distribution</P>
          <P>&nbsp;</P></FONT></OL></OL><FONT size=2 face=Arial><B>6.2 <A 
      name="Process to Design Elements">Process to Design Elements</A> 
      </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <P><IMG border=0 
      src="Example%20Software%20Architecture%20Document_files/sadoc_2.gif" 
      width=746 height=582></P>
      <OL>
        <OL><FONT size=2>
          <P align=center>Diagram Name: Process to Design 
      Elements</P></FONT></OL></OL>
      <BLOCKQUOTE><I><FONT size=2 face=Arial>6.2.1 <A 
        name=_Toc447085934>CourseCache</A> </FONT></I><I><FONT size=2>
        <P>The Course Cache thread is used to asynchronously retrieve items from 
        the legacy Course Catalog System.</P></FONT></I></BLOCKQUOTE><I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P></P></FONT></OL></OL></OL>
      <BLOCKQUOTE>
        <P><FONT size=2 face=Arial>6.2.2 <A 
        name=_Toc447085936>OfferingCache</A></FONT></P><FONT size=2>
        <P>The OfferingCashe thread is used to asynchronously retrieve items 
        from the legacy Course Catalog System.</P></FONT></BLOCKQUOTE>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>&nbsp;</P></FONT></OL></OL></OL></I>
      <BLOCKQUOTE><I><FONT size=2 face=Arial>6.2.3 Course </FONT></I><FONT 
        size=2>
        <P>A class offered by the university.</P>
        <P>Analysis Mechanisms:</P>
        <P>- Persistency</P>
        <P>- Legacy Interface</P>
        <P>&nbsp;</P></FONT><I>
        <P><FONT size=2 face=Arial>6.2.4 <A 
        name=_Toc447085937>CourseOffering</A></FONT></P></I></BLOCKQUOTE>
      <OL>
        <OL><I><FONT size=2 face=Arial></FONT></I><FONT size=2>
          <P>A specific offering for a course, including days of the week and 
          times.</P>
          <P>Analysis Mechanisms:</P>
          <P>- Persistency</P>
          <P>- Legacy Interface</P>
          <P>&nbsp;</P></FONT></OL></OL><FONT size=2 face=Arial><B>6.3 <A 
      name="Process Model to Design Model Dependencies">Process Model to Design 
      Model Dependencies</A> </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B><FONT size=2> 
      <P align=left><IMG border=0 
      src="Example%20Software%20Architecture%20Document_files/sadoc_5.gif" 
      width=557 height=597></P>
      <BLOCKQUOTE>
        <P align=left>Diagram Name: Process Model to Design Model 
        Dependencies</P></BLOCKQUOTE>
      <P>&nbsp;</P></FONT><FONT size=2 face=Arial><B>6.4 <A 
      name="Processes to the Implementation">Processes to the Implementation</A> 
      </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <P><IMG border=0 
      src="Example%20Software%20Architecture%20Document_files/sadoc_6.gif" 
      width=690 height=591></P>
      <P align=center><FONT size=2>Diagram Name: Processes to the Implementation 
      </FONT></P><I>
      <BLOCKQUOTE>
        <P><FONT size=2 face=Arial>6.4.1 Remote</FONT></P></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><I><FONT size=2 face=Arial></FONT></I><FONT size=2>
            <P>* The Remote interface serves to identify all remote objects. Any 
            object that is a remote object must directly or indirectly implement 
            this interface. Only those methods specified in a remote interface 
            are available remotely.</P>
            <P>* Implementation classes can implement any number of remote 
            interfaces and can extend other remote implementation 
            classes.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE><FONT size=2 face=Arial>6.4.2 <A 
        name=_Toc447085957>Runnable</A> </FONT></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>* The <EM>Runnable</EM> interface should be implemented by any 
            class whose instances are intended to be executed by a thread. The 
            class must define a method of no arguments called <EM>run</EM>.</P>
            <P>* This interface is designed to provide a common protocol for 
            objects that wish to execute code while they are active. For 
            example, <EM>Runnable</EM> is implemented by class 
            <EM>Thread</EM>.</P>
            <P>* Being active simply means that a thread has been started and 
            has not yet been stopped.</P></FONT></OL></OL></OL><I>
      <BLOCKQUOTE>
        <P><FONT size=2 face=Arial>6.4.3 Thread</FONT></P></BLOCKQUOTE></I>
      <OL>
        <OL>
          <OL><FONT size=2>
            <P>* A <I>thread</I> is a thread of execution in a program. The Java 
            Virtual Machine allows an application to have multiple threads of 
            execution running concurrently.</P>
            <P>* Every thread has a priority. Threads with higher priority are 
            executed in preference to threads with lower priority. Each thread 
            may or may not also be marked as a daemon. When code running in some 
            thread creates a new Thread object, the new thread has its priority 
            initially set equal to the priority of the creating thread, and is a 
            daemon thread if and only if the creating thread is a daemon.</P>
            <P>&nbsp;</P></FONT></OL></OL></OL>
      <P><FONT face=Arial><B>7.&nbsp; <A name="Deployment View">Deployment 
      View</A> </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B></P>
      <OL><FONT size=2>
        <P>A description of the deployment view of the architecture Describes 
        the various physical nodes for the most typical platform configurations. 
        Also describes the allocation of tasks (from the Process View) to the 
        physical nodes.</P>
        <P>This section is organized by physical network configuration; each 
        such configuration is illustrated by a deployment diagram, followed by a 
        mapping of processes to each processor.</P>
        <P><IMG border=0 
        src="Example%20Software%20Architecture%20Document_files/sadoc_8.gif" 
        width=598 height=444></P>
        <P align=left>Diagram Name: Deployment View</P></FONT></OL><FONT size=2 
      face=Arial><B>7.1 <A name="External Desktop PC">External Desktop PC</A> 
      </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <OL>
        <OL><FONT size=2>
          <P>Students register for courses using external desktop PCs which are 
          connected to the College Server via internet dial 
      up.</P></FONT></OL></OL><FONT size=2 face=Arial><B>7.2 <A 
      name="Desktop PC">Desktop PC</A> </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <OL>
        <OL><FONT size=2>
          <P>Students register for courses via local Desktop PCs that are 
          connected directly to the College Server via LAN. These local PCs are 
          also used by professors to select course and submit student grades. 
          The Registrar uses these local PCs to maintain student and professor 
          information.</P></FONT></OL></OL><FONT size=2 face=Arial><B>7.3 <A 
      name="Registration Server">Registration Server</A> </B></FONT><B><FONT 
      face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <OL>
        <OL><FONT size=2>
          <P>The Registration Server is the main campus UNIX Server. All faculty 
          and students have access to the Server through the campus 
          LAN.</P></FONT></OL></OL><FONT size=2 face=Arial><B>7.4 <A 
      name="Course Catalog">Course Catalog</A> </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <OL>
        <OL><FONT size=2>
          <P>The Course Catalog System is a legacy system that contains the 
          complete course catalog. Access to it is available via the College 
          Server and LAN.</P></FONT></OL></OL><FONT size=2 face=Arial><B>7.5 <A 
      name="Billing System">Billing System</A> </B></FONT><B><FONT face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <OL><FONT size=2>
        <P>The Billing System (also called the Finance System) is a legacy 
        system that generates the student bills each semester.</P>
        <P>&nbsp;</P></FONT></OL><FONT face=Arial><B>8.&nbsp; <A 
      name="Size and Performance">Size and Performance</A> </B></FONT><B><FONT 
      face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <OL>
        <BLOCKQUOTE><FONT size=2>
          <P>The chosen software architecture supports the key sizing and timing 
          requirements, as stipulated in the Supplementary Specification 
          [15]:</P></FONT></BLOCKQUOTE><FONT size=2>
        <OL>
          <OL>
            <LI>The system shall support up to 2000 simultaneous users against 
            the central database at any given time, and up to 500 simultaneous 
            users against the local servers at any one time. 
            <LI>The system shall provide access to the legacy course catalog 
            database with no more than a 10 second latency. 
            <LI>The system must be able to complete 80% of all transactions 
            within 2 minutes. 
            <LI>The client portion shall require less than 20 MB disk space and 
            32 MB RAM. </LI></OL></OL></FONT>
        <BLOCKQUOTE>
          <BLOCKQUOTE><FONT size=2>
            <P>The selected architecture supports the sizing and timing 
            requirements through the implementation of a client-server 
            architecture. The client portion is implemented on local campus PCs 
            or remote dial up PCs. The components have been designed to ensure 
            that minimal disk and memory requirements are needed on the PC 
            client portion.</P></FONT></BLOCKQUOTE></BLOCKQUOTE></OL><FONT 
      face=Arial><B>9.&nbsp; <A name=Quality>Quality</A> </B></FONT><B><FONT 
      face=Arial><A 
      href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/artifacts/analysisndesign/sadoc.htm#Toc"><IMG 
      border=0 src="Example%20Software%20Architecture%20Document_files/top.gif" 
      width=26 height=20></A></FONT></B> 
      <OL>
        <BLOCKQUOTE><FONT size=2>
          <P>The software architecture supports the quality requirements, as 
          stipulated in the Supplementary Specification 
        [15]:</P></FONT></BLOCKQUOTE>
        <OL>
          <OL><FONT size=2>
            <LI>The desktop user-interface shall be Windows 95/98 compliant. 
            <LI>The user interface of the C-Registration System shall be 
            designed for ease-of-use and shall be appropriate for a 
            computer-literate user community with no additional training on the 
            System. 
            <LI>Each feature of the C-Registration System shall have built-in 
            online help for the user. Online Help shall include step by step 
            instructions on using the System. Online Help shall include 
            definitions for terms and acronymns. 
            <LI>The C-Registration System shall be available 24 hours a day, 7 
            days a week. There shall be no more than 4% down time. 
            <LI>Mean Time Between Failures shall exceed 300 hours. 
            <LI>Upgrades to the PC client portion of C-Registration shall be 
            downloadable from the UNIX Server over the internet. This feature 
            enables students to have easy access to system upgrades.</FONT> 
          </LI></OL></OL>
        <P>&nbsp; &nbsp; </P></OL>&nbsp;<!--msnavigation--></TD></TR><!--msnavigation--></TBODY></TABLE><!--msnavigation-->
<TABLE border=0 cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR>
    <TD>
      <TABLE border=0 width="100%" height=23>
        <TBODY>
        <TR>
          <TD height=19 width="5%"></TD>
          <TD height=19 width="56%"><FONT face=Arial><A 
            href="http://www.ts.mah.se/RUP/wyliecollegeexample/courseregistrationproject/copyrite/copyrite.htm"><SMALL><SMALL>Copyright&nbsp; 
            © 1987 - 2001 Rational Software 
            Corporation&nbsp;</SMALL></SMALL></A></FONT> </TD>
          <TD height=19 width="39%">
            <P align=right><FONT face=Arial><SMALL><SMALL>Course Registration 
            Project Web Example<BR>Version 2001.02</SMALL></SMALL></FONT> 
        </P></TD></TR></TBODY></TABLE>
      <P>&nbsp;</P></TD></TR><!--msnavigation--></TBODY></TABLE></BODY></HTML>
